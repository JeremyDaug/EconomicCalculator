Process Overview and Brainstorm Document

Processes are a simplificiation of all productive (Ie not service)
activity that can occur in an economy. It's supposed to ensure 
plugability between different cultures, and so on, though that
may not be entirely true in it's current iteration. There may be
problems in implementation between classical (human like)
economies and those of gestalt economies, in particular machine
economies which should have effectively no population but that
which is needed to oversee production.

Current iteration -
  The current iteration contains minimal data and has no
    optional parts.

  - Id and Name are for identification.
  - VariantName is to allow processes of the same big name
    that have differences. IE, milling with stone mill vs
	milling with a steam roller.
  - Inputs are products which are consumed (and how much).
  - Outputs are products which are produced by the process.
  - Capital are goods required to complete the process, but are 
	not consumed in during the process.
	
  Currently, it is assumed a population will do as many
    processes as possible, with the primary limitations being
	capital and inputs, with labor inputs being granted special
	attention from inputs. Capital can be used defined
	fractionally, having a process use only a portion of a
	capital good. Inputs are only limited by the total available
	products which go into it. If there is enough inputs for 1
	process, then it does 1, if there is enough for 10 it does
	10. The hard cap on how much can be done is the available
	labor inputs. When calculating throughput it assumes use of
	all in proportion and an output that is of equivalent
	proportion.
	Eg. 
	Milling takes as inputs
	  - 1000 Kg of Grain
	  - 1 day of labor
	has capital requiremnt of 
	  - 1 mill stone
	and outputs
	  - 700 Kg of flour
	  - 300 Kg of Biowaste
	If we have 1 laborer, a Mill stone and 500 Kg of grain, the 
	process will consume 0.5 of the labor and all the grain and
	effectively consumes 0.5 of the mill stone. If the laborer
	is doing this by his own he gains all the profit. So lost
	labor costs him nothing. If the process is owned by someone
	else, the laborer is only payed for that half day.

Problems - 
  1.Currently, the calculation and effect of limitations is hard
  as there. The biggest limiters are Labor Inputs and Capital 
  requirements. Capital limitations are easy enough as they are
  maintained (assuming low failure) each day, they would have
  lower priority compared to inputs as inputs make outputs but
  capital doesn't on it's own. Labor is limited in that it's
  total capacity is harshly limited by the population the labor
  comes from. Generally, a process's owner should either 
  try to buy each input in proportion to the others, or it
  should prioritize storable goods in then buy labor as it can.
  2.The next biggest problem is lack of information density. If
  you want to have the same effective process with different
  capital or input requirements, you have to duplicate the
  process. Each would just be a different process with a variant
  name. This is inefficient in terms of storage since processes
  which are simple variations could condense changes down into
  variants and modifiers based on inputs, capital, labor, tech,
  or what have you.

Hypothetical Changes -
	1)This problem may be one which can't be solved here. Some
	  way to assist may be added via priorities or helper 
	  functions, but otherwise may be not doable from here.
	2)Information density can most likely be solved by adding
	  info to inputs and capital. Most would apply to capital,
	  but allowing substitute goods for inputs, or supplementary
	  goods that improve output, but aren't required.
	  To complete this proprosed change would possibly require:
	    1.Most important would be Tags. Just these would go far
		  but may not be detailed enough to satisfy my mania.
		  THIS IS THE BEST ONE TO DO SOONER RATHER THAN LATER.
		  Possible tags:
		  a)Required, marks a good as required in the process.
		    Making this the default would probably be better.
		  b)Optional, marks good as not required to work the 
		    process, would give a bonus to it's inclusion or
			a penalty for it's exclusion. Without (3) this bonus
			would have to be a flat bonus across the board.
		  c)Substitute, marks a good as a substitute for another,
		    somehow. This would probably not be possible, and
			would require (4) to be functional at all.
		  d)Consumed, marks a good as being used, and so does not
		    become one of the output goods but rather changes to
			it's standard failure products. This would also be
			great for secondary or catalyst goods.
		  e)Refined/Slag, this could be used to make a pair of
		    outputs as one being a refining product and the
			other being the slag produced. Increasing efficiency
			would cause the ratio of refined to slag to change.
		2.Base Effect, this is how much the input or good effects
		  the process on flatly, so iron would be a base of 1
		  while wood would be 0 in refining.
		3.Multiplicative Bonus, this is how much the process
		  improves the efficiency of the process, allowing for
		  more throughput or higher of specific outputs. For
		  example, using coal instead of wood would improve the
		  efficiency of refining iron.
		4.Substitute Goods, this would be entirely separate from
		  processes and would instead be more closely related to
		  products. This would be a method by which goods could
		  substitute for each other without making variants for
		  each variant or substitute good.