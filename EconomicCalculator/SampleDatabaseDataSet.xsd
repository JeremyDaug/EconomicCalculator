<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="SampleDatabaseDataSet" targetNamespace="http://tempuri.org/SampleDatabaseDataSet.xsd" xmlns:mstns="http://tempuri.org/SampleDatabaseDataSet.xsd" xmlns="http://tempuri.org/SampleDatabaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SampleDatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SampleDatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EconomicCalculator.Properties.Settings.GlobalReference.Default.SampleDatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CropOutputsTableAdapter" GeneratorDataComponentClassName="CropOutputsTableAdapter" Name="CropOutputs" UserDataComponentName="CropOutputsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SampleDatabaseConnectionString (Settings)" DbObjectName="dbo.CropOutputs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CropOutputs] WHERE (([CropName] = @Original_CropName) AND ([OutputProduct] = @Original_OutputProduct) AND ([Amount] = @Original_Amount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CropName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CropName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OutputProduct" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OutputProduct" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CropOutputs] ([CropName], [OutputProduct], [Amount]) VALUES (@CropName, @OutputProduct, @Amount);
SELECT CropName, OutputProduct, Amount FROM CropOutputs WHERE (CropName = @CropName) AND (OutputProduct = @OutputProduct)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CropName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CropName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OutputProduct" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OutputProduct" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CropName, OutputProduct, Amount FROM dbo.CropOutputs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CropOutputs] SET [CropName] = @CropName, [OutputProduct] = @OutputProduct, [Amount] = @Amount WHERE (([CropName] = @Original_CropName) AND ([OutputProduct] = @Original_OutputProduct) AND ([Amount] = @Original_Amount));
SELECT CropName, OutputProduct, Amount FROM CropOutputs WHERE (CropName = @CropName) AND (OutputProduct = @OutputProduct)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CropName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CropName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OutputProduct" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OutputProduct" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CropName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CropName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OutputProduct" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OutputProduct" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CropName" DataSetColumn="CropName" />
              <Mapping SourceColumn="OutputProduct" DataSetColumn="OutputProduct" />
              <Mapping SourceColumn="Amount" DataSetColumn="Amount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CropsTableAdapter" GeneratorDataComponentClassName="CropsTableAdapter" Name="Crops" UserDataComponentName="CropsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SampleDatabaseConnectionString (Settings)" DbObjectName="dbo.Crops" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Crops] WHERE (([Name] = @Original_Name) AND ([Type] = @Original_Type) AND ([Planting] = @Original_Planting) AND ([Seed] = @Original_Seed) AND ([Labor] = @Original_Labor) AND ([LifeCycle] = @Original_LifeCycle))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Planting" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Planting" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Seed" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Labor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Labor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LifeCycle" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LifeCycle" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Crops] ([Name], [Type], [Planting], [Seed], [Labor], [LifeCycle]) VALUES (@Name, @Type, @Planting, @Seed, @Labor, @LifeCycle);
SELECT Name, Type, Planting, Seed, Labor, LifeCycle FROM Crops WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Planting" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Planting" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Seed" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Labor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Labor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LifeCycle" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LifeCycle" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, Type, Planting, Seed, Labor, LifeCycle FROM dbo.Crops</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Crops] SET [Name] = @Name, [Type] = @Type, [Planting] = @Planting, [Seed] = @Seed, [Labor] = @Labor, [LifeCycle] = @LifeCycle WHERE (([Name] = @Original_Name) AND ([Type] = @Original_Type) AND ([Planting] = @Original_Planting) AND ([Seed] = @Original_Seed) AND ([Labor] = @Original_Labor) AND ([LifeCycle] = @Original_LifeCycle));
SELECT Name, Type, Planting, Seed, Labor, LifeCycle FROM Crops WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Planting" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Planting" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Seed" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Labor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Labor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LifeCycle" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LifeCycle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Planting" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Planting" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Seed" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Labor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Labor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LifeCycle" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LifeCycle" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="Planting" DataSetColumn="Planting" />
              <Mapping SourceColumn="Seed" DataSetColumn="Seed" />
              <Mapping SourceColumn="Labor" DataSetColumn="Labor" />
              <Mapping SourceColumn="LifeCycle" DataSetColumn="LifeCycle" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProcessesTableAdapter" GeneratorDataComponentClassName="ProcessesTableAdapter" Name="Processes" UserDataComponentName="ProcessesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SampleDatabaseConnectionString (Settings)" DbObjectName="dbo.Processes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Processes] WHERE (([Name] = @Original_Name) AND ([Labor] = @Original_Labor))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Labor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Labor" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Processes] ([Name], [Labor]) VALUES (@Name, @Labor);
SELECT Name, Labor FROM Processes WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Labor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Labor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, Labor FROM dbo.Processes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Processes] SET [Name] = @Name, [Labor] = @Labor WHERE (([Name] = @Original_Name) AND ([Labor] = @Original_Labor));
SELECT Name, Labor FROM Processes WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Labor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Labor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Labor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Labor" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Labor" DataSetColumn="Labor" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProcessInputsTableAdapter" GeneratorDataComponentClassName="ProcessInputsTableAdapter" Name="ProcessInputs" UserDataComponentName="ProcessInputsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SampleDatabaseConnectionString (Settings)" DbObjectName="dbo.ProcessInputs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ProcessInputs] WHERE (([ProcessName] = @Original_ProcessName) AND ([InputName] = @Original_InputName) AND ([Amount] = @Original_Amount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProcessName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProcessName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_InputName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InputName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ProcessInputs] ([ProcessName], [InputName], [Amount]) VALUES (@ProcessName, @InputName, @Amount);
SELECT ProcessName, InputName, Amount FROM ProcessInputs WHERE (ProcessName = @ProcessName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProcessName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProcessName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@InputName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InputName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ProcessName, InputName, Amount FROM dbo.ProcessInputs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ProcessInputs] SET [ProcessName] = @ProcessName, [InputName] = @InputName, [Amount] = @Amount WHERE (([ProcessName] = @Original_ProcessName) AND ([InputName] = @Original_InputName) AND ([Amount] = @Original_Amount));
SELECT ProcessName, InputName, Amount FROM ProcessInputs WHERE (ProcessName = @ProcessName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProcessName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProcessName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@InputName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InputName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProcessName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProcessName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_InputName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="InputName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProcessName" DataSetColumn="ProcessName" />
              <Mapping SourceColumn="InputName" DataSetColumn="InputName" />
              <Mapping SourceColumn="Amount" DataSetColumn="Amount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProcessOutputsTableAdapter" GeneratorDataComponentClassName="ProcessOutputsTableAdapter" Name="ProcessOutputs" UserDataComponentName="ProcessOutputsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SampleDatabaseConnectionString (Settings)" DbObjectName="dbo.ProcessOutputs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ProcessOutputs] WHERE (([ProcessName] = @Original_ProcessName) AND ((@IsNull_OutputName = 1 AND [OutputName] IS NULL) OR ([OutputName] = @Original_OutputName)) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProcessName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProcessName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_OutputName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OutputName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OutputName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ProcessOutputs] ([ProcessName], [OutputName], [Amount]) VALUES (@ProcessName, @OutputName, @Amount);
SELECT ProcessName, OutputName, Amount FROM ProcessOutputs WHERE (ProcessName = @ProcessName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProcessName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProcessName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OutputName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OutputName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ProcessName, OutputName, Amount FROM dbo.ProcessOutputs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ProcessOutputs] SET [ProcessName] = @ProcessName, [OutputName] = @OutputName, [Amount] = @Amount WHERE (([ProcessName] = @Original_ProcessName) AND ((@IsNull_OutputName = 1 AND [OutputName] IS NULL) OR ([OutputName] = @Original_OutputName)) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)));
SELECT ProcessName, OutputName, Amount FROM ProcessOutputs WHERE (ProcessName = @ProcessName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProcessName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProcessName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@OutputName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OutputName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProcessName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProcessName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_OutputName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_OutputName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="OutputName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProcessName" DataSetColumn="ProcessName" />
              <Mapping SourceColumn="OutputName" DataSetColumn="OutputName" />
              <Mapping SourceColumn="Amount" DataSetColumn="Amount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProductsTableAdapter" GeneratorDataComponentClassName="ProductsTableAdapter" Name="Products" UserDataComponentName="ProductsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SampleDatabaseConnectionString (Settings)" DbObjectName="dbo.Products" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Products] WHERE (([Name] = @Original_Name) AND ([UnitId] = @Original_UnitId) AND ([CurrentPrice] = @Original_CurrentPrice) AND ([MeanTimeToFailure] = @Original_MeanTimeToFailure))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_CurrentPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="CurrentPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_MeanTimeToFailure" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MeanTimeToFailure" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Products] ([Name], [UnitId], [CurrentPrice], [MeanTimeToFailure]) VALUES (@Name, @UnitId, @CurrentPrice, @MeanTimeToFailure);
SELECT Name, UnitId, CurrentPrice, MeanTimeToFailure FROM Products WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@CurrentPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="CurrentPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@MeanTimeToFailure" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MeanTimeToFailure" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, UnitId, CurrentPrice, MeanTimeToFailure FROM dbo.Products</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Products] SET [Name] = @Name, [UnitId] = @UnitId, [CurrentPrice] = @CurrentPrice, [MeanTimeToFailure] = @MeanTimeToFailure WHERE (([Name] = @Original_Name) AND ([UnitId] = @Original_UnitId) AND ([CurrentPrice] = @Original_CurrentPrice) AND ([MeanTimeToFailure] = @Original_MeanTimeToFailure));
SELECT Name, UnitId, CurrentPrice, MeanTimeToFailure FROM Products WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@CurrentPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="CurrentPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@MeanTimeToFailure" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MeanTimeToFailure" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_CurrentPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="CurrentPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_MeanTimeToFailure" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MeanTimeToFailure" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="UnitId" DataSetColumn="UnitId" />
              <Mapping SourceColumn="CurrentPrice" DataSetColumn="CurrentPrice" />
              <Mapping SourceColumn="MeanTimeToFailure" DataSetColumn="MeanTimeToFailure" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UnitsTableAdapter" GeneratorDataComponentClassName="UnitsTableAdapter" Name="Units" UserDataComponentName="UnitsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SampleDatabaseConnectionString (Settings)" DbObjectName="dbo.Units" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Units] WHERE (([UnitId] = @Original_UnitId) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Units] ([UnitId], [Name]) VALUES (@UnitId, @Name);
SELECT UnitId, Name FROM Units WHERE (UnitId = @UnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UnitId, Name FROM dbo.Units</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Units] SET [UnitId] = @UnitId, [Name] = @Name WHERE (([UnitId] = @Original_UnitId) AND ([Name] = @Original_Name));
SELECT UnitId, Name FROM Units WHERE (UnitId = @UnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UnitId" DataSetColumn="UnitId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="SampleDatabaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="SampleDatabaseDataSet" msprop:Generator_UserDSName="SampleDatabaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CropOutputs" msprop:Generator_TableClassName="CropOutputsDataTable" msprop:Generator_TableVarName="tableCropOutputs" msprop:Generator_TablePropName="CropOutputs" msprop:Generator_RowDeletingName="CropOutputsRowDeleting" msprop:Generator_RowChangingName="CropOutputsRowChanging" msprop:Generator_RowEvHandlerName="CropOutputsRowChangeEventHandler" msprop:Generator_RowDeletedName="CropOutputsRowDeleted" msprop:Generator_UserTableName="CropOutputs" msprop:Generator_RowChangedName="CropOutputsRowChanged" msprop:Generator_RowEvArgName="CropOutputsRowChangeEvent" msprop:Generator_RowClassName="CropOutputsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CropName" msprop:Generator_ColumnVarNameInTable="columnCropName" msprop:Generator_ColumnPropNameInRow="CropName" msprop:Generator_ColumnPropNameInTable="CropNameColumn" msprop:Generator_UserColumnName="CropName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="OutputProduct" msprop:Generator_ColumnVarNameInTable="columnOutputProduct" msprop:Generator_ColumnPropNameInRow="OutputProduct" msprop:Generator_ColumnPropNameInTable="OutputProductColumn" msprop:Generator_UserColumnName="OutputProduct">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Amount" msprop:Generator_ColumnVarNameInTable="columnAmount" msprop:Generator_ColumnPropNameInRow="Amount" msprop:Generator_ColumnPropNameInTable="AmountColumn" msprop:Generator_UserColumnName="Amount" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Crops" msprop:Generator_TableClassName="CropsDataTable" msprop:Generator_TableVarName="tableCrops" msprop:Generator_TablePropName="Crops" msprop:Generator_RowDeletingName="CropsRowDeleting" msprop:Generator_RowChangingName="CropsRowChanging" msprop:Generator_RowEvHandlerName="CropsRowChangeEventHandler" msprop:Generator_RowDeletedName="CropsRowDeleted" msprop:Generator_UserTableName="Crops" msprop:Generator_RowChangedName="CropsRowChanged" msprop:Generator_RowEvArgName="CropsRowChangeEvent" msprop:Generator_RowClassName="CropsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Planting" msprop:Generator_ColumnVarNameInTable="columnPlanting" msprop:Generator_ColumnPropNameInRow="Planting" msprop:Generator_ColumnPropNameInTable="PlantingColumn" msprop:Generator_UserColumnName="Planting">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Seed" msprop:Generator_ColumnVarNameInTable="columnSeed" msprop:Generator_ColumnPropNameInRow="Seed" msprop:Generator_ColumnPropNameInTable="SeedColumn" msprop:Generator_UserColumnName="Seed">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Labor" msprop:Generator_ColumnVarNameInTable="columnLabor" msprop:Generator_ColumnPropNameInRow="Labor" msprop:Generator_ColumnPropNameInTable="LaborColumn" msprop:Generator_UserColumnName="Labor" type="xs:double" />
              <xs:element name="LifeCycle" msprop:Generator_ColumnVarNameInTable="columnLifeCycle" msprop:Generator_ColumnPropNameInRow="LifeCycle" msprop:Generator_ColumnPropNameInTable="LifeCycleColumn" msprop:Generator_UserColumnName="LifeCycle" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Processes" msprop:Generator_TableClassName="ProcessesDataTable" msprop:Generator_TableVarName="tableProcesses" msprop:Generator_TablePropName="Processes" msprop:Generator_RowDeletingName="ProcessesRowDeleting" msprop:Generator_RowChangingName="ProcessesRowChanging" msprop:Generator_RowEvHandlerName="ProcessesRowChangeEventHandler" msprop:Generator_RowDeletedName="ProcessesRowDeleted" msprop:Generator_UserTableName="Processes" msprop:Generator_RowChangedName="ProcessesRowChanged" msprop:Generator_RowEvArgName="ProcessesRowChangeEvent" msprop:Generator_RowClassName="ProcessesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Labor" msprop:Generator_ColumnVarNameInTable="columnLabor" msprop:Generator_ColumnPropNameInRow="Labor" msprop:Generator_ColumnPropNameInTable="LaborColumn" msprop:Generator_UserColumnName="Labor" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProcessInputs" msprop:Generator_TableClassName="ProcessInputsDataTable" msprop:Generator_TableVarName="tableProcessInputs" msprop:Generator_TablePropName="ProcessInputs" msprop:Generator_RowDeletingName="ProcessInputsRowDeleting" msprop:Generator_RowChangingName="ProcessInputsRowChanging" msprop:Generator_RowEvHandlerName="ProcessInputsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProcessInputsRowDeleted" msprop:Generator_UserTableName="ProcessInputs" msprop:Generator_RowChangedName="ProcessInputsRowChanged" msprop:Generator_RowEvArgName="ProcessInputsRowChangeEvent" msprop:Generator_RowClassName="ProcessInputsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProcessName" msprop:Generator_ColumnVarNameInTable="columnProcessName" msprop:Generator_ColumnPropNameInRow="ProcessName" msprop:Generator_ColumnPropNameInTable="ProcessNameColumn" msprop:Generator_UserColumnName="ProcessName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="InputName" msprop:Generator_ColumnVarNameInTable="columnInputName" msprop:Generator_ColumnPropNameInRow="InputName" msprop:Generator_ColumnPropNameInTable="InputNameColumn" msprop:Generator_UserColumnName="InputName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Amount" msprop:Generator_ColumnVarNameInTable="columnAmount" msprop:Generator_ColumnPropNameInRow="Amount" msprop:Generator_ColumnPropNameInTable="AmountColumn" msprop:Generator_UserColumnName="Amount" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProcessOutputs" msprop:Generator_TableClassName="ProcessOutputsDataTable" msprop:Generator_TableVarName="tableProcessOutputs" msprop:Generator_TablePropName="ProcessOutputs" msprop:Generator_RowDeletingName="ProcessOutputsRowDeleting" msprop:Generator_RowChangingName="ProcessOutputsRowChanging" msprop:Generator_RowEvHandlerName="ProcessOutputsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProcessOutputsRowDeleted" msprop:Generator_UserTableName="ProcessOutputs" msprop:Generator_RowChangedName="ProcessOutputsRowChanged" msprop:Generator_RowEvArgName="ProcessOutputsRowChangeEvent" msprop:Generator_RowClassName="ProcessOutputsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProcessName" msprop:Generator_ColumnVarNameInTable="columnProcessName" msprop:Generator_ColumnPropNameInRow="ProcessName" msprop:Generator_ColumnPropNameInTable="ProcessNameColumn" msprop:Generator_UserColumnName="ProcessName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="OutputName" msprop:Generator_ColumnVarNameInTable="columnOutputName" msprop:Generator_ColumnPropNameInRow="OutputName" msprop:Generator_ColumnPropNameInTable="OutputNameColumn" msprop:Generator_UserColumnName="OutputName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Amount" msprop:Generator_ColumnVarNameInTable="columnAmount" msprop:Generator_ColumnPropNameInRow="Amount" msprop:Generator_ColumnPropNameInTable="AmountColumn" msprop:Generator_UserColumnName="Amount" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Products" msprop:Generator_TableClassName="ProductsDataTable" msprop:Generator_TableVarName="tableProducts" msprop:Generator_TablePropName="Products" msprop:Generator_RowDeletingName="ProductsRowDeleting" msprop:Generator_RowChangingName="ProductsRowChanging" msprop:Generator_RowEvHandlerName="ProductsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProductsRowDeleted" msprop:Generator_UserTableName="Products" msprop:Generator_RowChangedName="ProductsRowChanged" msprop:Generator_RowEvArgName="ProductsRowChangeEvent" msprop:Generator_RowClassName="ProductsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UnitId" msprop:Generator_ColumnVarNameInTable="columnUnitId" msprop:Generator_ColumnPropNameInRow="UnitId" msprop:Generator_ColumnPropNameInTable="UnitIdColumn" msprop:Generator_UserColumnName="UnitId" type="xs:int" />
              <xs:element name="CurrentPrice" msprop:Generator_ColumnVarNameInTable="columnCurrentPrice" msprop:Generator_ColumnPropNameInRow="CurrentPrice" msprop:Generator_ColumnPropNameInTable="CurrentPriceColumn" msprop:Generator_UserColumnName="CurrentPrice" type="xs:double" />
              <xs:element name="MeanTimeToFailure" msprop:Generator_ColumnVarNameInTable="columnMeanTimeToFailure" msprop:Generator_ColumnPropNameInRow="MeanTimeToFailure" msprop:Generator_ColumnPropNameInTable="MeanTimeToFailureColumn" msprop:Generator_UserColumnName="MeanTimeToFailure" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Units" msprop:Generator_TableClassName="UnitsDataTable" msprop:Generator_TableVarName="tableUnits" msprop:Generator_TablePropName="Units" msprop:Generator_RowDeletingName="UnitsRowDeleting" msprop:Generator_RowChangingName="UnitsRowChanging" msprop:Generator_RowEvHandlerName="UnitsRowChangeEventHandler" msprop:Generator_RowDeletedName="UnitsRowDeleted" msprop:Generator_UserTableName="Units" msprop:Generator_RowChangedName="UnitsRowChanged" msprop:Generator_RowEvArgName="UnitsRowChangeEvent" msprop:Generator_RowClassName="UnitsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UnitId" msprop:Generator_ColumnVarNameInTable="columnUnitId" msprop:Generator_ColumnPropNameInRow="UnitId" msprop:Generator_ColumnPropNameInTable="UnitIdColumn" msprop:Generator_UserColumnName="UnitId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CropOutputs" />
      <xs:field xpath="mstns:CropName" />
      <xs:field xpath="mstns:OutputProduct" />
    </xs:unique>
    <xs:unique name="Crops_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Crops" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="Processes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Processes" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="ProcessInputs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProcessInputs" />
      <xs:field xpath="mstns:ProcessName" />
    </xs:unique>
    <xs:unique name="ProcessOutputs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProcessOutputs" />
      <xs:field xpath="mstns:ProcessName" />
    </xs:unique>
    <xs:unique name="Products_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Products" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="Units_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Units" />
      <xs:field xpath="mstns:UnitId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_CropOutputs_ToCrops" msdata:parent="Crops" msdata:child="CropOutputs" msdata:parentkey="Name" msdata:childkey="CropName" msprop:Generator_UserChildTable="CropOutputs" msprop:Generator_ChildPropName="GetCropOutputsRows" msprop:Generator_UserRelationName="FK_CropOutputs_ToCrops" msprop:Generator_RelationVarName="relationFK_CropOutputs_ToCrops" msprop:Generator_UserParentTable="Crops" msprop:Generator_ParentPropName="CropsRow" />
      <msdata:Relationship name="FK_CropOutputs_ToProducts" msdata:parent="Products" msdata:child="CropOutputs" msdata:parentkey="Name" msdata:childkey="OutputProduct" msprop:Generator_UserChildTable="CropOutputs" msprop:Generator_ChildPropName="GetCropOutputsRows" msprop:Generator_UserRelationName="FK_CropOutputs_ToProducts" msprop:Generator_RelationVarName="relationFK_CropOutputs_ToProducts" msprop:Generator_UserParentTable="Products" msprop:Generator_ParentPropName="ProductsRow" />
      <msdata:Relationship name="FK_Crops_SeedProducts" msdata:parent="Products" msdata:child="Crops" msdata:parentkey="Name" msdata:childkey="Seed" msprop:Generator_UserChildTable="Crops" msprop:Generator_ChildPropName="GetCropsRows" msprop:Generator_UserRelationName="FK_Crops_SeedProducts" msprop:Generator_RelationVarName="relationFK_Crops_SeedProducts" msprop:Generator_UserParentTable="Products" msprop:Generator_ParentPropName="ProductsRow" />
      <msdata:Relationship name="FK_ProcessInputs_ToProcesses" msdata:parent="Processes" msdata:child="ProcessInputs" msdata:parentkey="Name" msdata:childkey="ProcessName" msprop:Generator_UserChildTable="ProcessInputs" msprop:Generator_ChildPropName="GetProcessInputsRows" msprop:Generator_UserRelationName="FK_ProcessInputs_ToProcesses" msprop:Generator_ParentPropName="ProcessesRow" msprop:Generator_RelationVarName="relationFK_ProcessInputs_ToProcesses" msprop:Generator_UserParentTable="Processes" />
      <msdata:Relationship name="FK_ProcessInputs_ToProducts" msdata:parent="Products" msdata:child="ProcessInputs" msdata:parentkey="Name" msdata:childkey="InputName" msprop:Generator_UserChildTable="ProcessInputs" msprop:Generator_ChildPropName="GetProcessInputsRows" msprop:Generator_UserRelationName="FK_ProcessInputs_ToProducts" msprop:Generator_RelationVarName="relationFK_ProcessInputs_ToProducts" msprop:Generator_UserParentTable="Products" msprop:Generator_ParentPropName="ProductsRow" />
      <msdata:Relationship name="FK_ProcessOutputs_ToProcess" msdata:parent="Processes" msdata:child="ProcessOutputs" msdata:parentkey="Name" msdata:childkey="ProcessName" msprop:Generator_UserChildTable="ProcessOutputs" msprop:Generator_ChildPropName="GetProcessOutputsRows" msprop:Generator_UserRelationName="FK_ProcessOutputs_ToProcess" msprop:Generator_ParentPropName="ProcessesRow" msprop:Generator_RelationVarName="relationFK_ProcessOutputs_ToProcess" msprop:Generator_UserParentTable="Processes" />
      <msdata:Relationship name="FK_ProcessOutputs_ToProducts" msdata:parent="Products" msdata:child="ProcessOutputs" msdata:parentkey="Name" msdata:childkey="OutputName" msprop:Generator_UserChildTable="ProcessOutputs" msprop:Generator_ChildPropName="GetProcessOutputsRows" msprop:Generator_UserRelationName="FK_ProcessOutputs_ToProducts" msprop:Generator_RelationVarName="relationFK_ProcessOutputs_ToProducts" msprop:Generator_UserParentTable="Products" msprop:Generator_ParentPropName="ProductsRow" />
      <msdata:Relationship name="FK_Products_ToUnits" msdata:parent="Units" msdata:child="Products" msdata:parentkey="UnitId" msdata:childkey="UnitId" msprop:Generator_UserChildTable="Products" msprop:Generator_ChildPropName="GetProductsRows" msprop:Generator_UserRelationName="FK_Products_ToUnits" msprop:Generator_RelationVarName="relationFK_Products_ToUnits" msprop:Generator_UserParentTable="Units" msprop:Generator_ParentPropName="UnitsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>