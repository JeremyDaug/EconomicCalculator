@model IEnumerable<EconModels.ProductModel.FailsIntoPair>

@{
    ViewBag.Title = "FailsIntoResult";
}

@{ 
    EconModels.ProductModel.Product result = null;
    if (Model.Any())
    {
        result = Model.First().Result;
    }
}

@if (result != null)
{
<h2>@result.Name is created from the consumption or failure of: </h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            Source Product
        </th>
        <th>
            One Unit Fails into
        </th>
        <th>
            Result Product
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.ActionLink(item.Source.Name, "Details", "Products", new { id = item.SourceId }, htmlAttributes: null)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Amount) @Html.DisplayFor(modelItem => item.Result.UnitName)
        </td>
        <td>
            @Html.ActionLink(item.Result.Name, "Details", "Products", new { id = item.ResultId }, htmlAttributes: null)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { sourceId = item.SourceId, resultId = item.ResultId }) |
            @Html.ActionLink("Details", "Details", new { sourceId = item.SourceId, resultId = item.ResultId }) |
            @Html.ActionLink("Delete", "Delete", new { sourceId = item.SourceId, resultId = item.ResultId })
        </td>
    </tr>
}

</table>
}
else {
    <p>Product does not result from failure or consumption.</p>
}