@model EconModels.ProductModel.FailsIntoPair

@{
    ViewBag.Title = "CreateFailureWithSource";
    var currentPairs = (List<EconModels.ProductModel.FailsIntoPair>)ViewBag.CurrentPairs;
    var source = (EconModels.ProductModel.Product)ViewBag.DefaultSource;
}



@if (currentPairs.Any())
{
    <h2>Existing Failures</h2>
    <table class="table">
        <tr>
            <th>Source Product</th>
            <th>One Unit Fails Into</th>
            <th>Result Product</th>
            <th></th>
        </tr>
    @foreach (var item in currentPairs)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Source.Name, "Details", "Products", new { id = item.SourceId }, htmlAttributes: null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount) @Html.DisplayFor(modelItem => item.Result.UnitName)
            </td>
            <td>
                @Html.ActionLink(item.Result.Name, "Details", "Products", new { id = item.ResultId }, htmlAttributes: null)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { sourceId = item.SourceId, resultId = item.ResultId }) |
                @Html.ActionLink("Details", "Details", new { sourceId = item.SourceId, resultId = item.ResultId }) |
                @Html.ActionLink("Delete", "Delete", new { sourceId = item.SourceId, resultId = item.ResultId })
            </td>
        </tr>
    }
    </table>
}

<h2>Create Failure Product from @source.Name</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FailsIntoPair</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SourceId, "SourceId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SourceId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SourceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResultId, "ResultId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ResultId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
