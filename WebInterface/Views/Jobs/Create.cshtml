@model WebInterface.Models.JobModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Job</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.JobType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.JobCategory, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.JobCategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Skill, "Job Skill", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SkillId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SkillId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SkillLevel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SkillLevel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SkillLevel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProcessList, "Processes", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(x => x.SelectedProcessIds, Model.ProcessList)
            @Html.ValidationMessageFor(model => model.SelectedProcessIds)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LaborList, "Labors", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(x => x.SelectedLaborIds, Model.LaborList)
            @Html.ValidationMessageFor(model => model.SelectedLaborIds)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Jobs, "Related Jobs", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(x => x.SelectedRelatedJobIds, Model.Jobs)
            @Html.ValidationMessageFor(model => model.SelectedRelatedJobIds)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
